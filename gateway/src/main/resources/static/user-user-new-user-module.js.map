{"version":3,"sources":["./src/app/layout/user/user-new/user.component.html","./src/app/layout/user/user-new/user-routing.module.ts","./src/app/layout/user/user-new/user.component.scss","./src/app/layout/user/user-new/user.component.ts","./src/app/layout/user/user-new/user.module.ts"],"names":[],"mappings":"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","file":"user-user-new-user-module.js","sourcesContent":["export default \"<div [@routerTransition] style=\\\"margin-left: 20px;\\\">\\n    <app-page-header [heading]=\\\"usuarioForm.get('nome').value === null ? 'Cadastro de usuario' : 'Alteração de usuario'\\\" [icon]=\\\"'fa-edit'\\\"></app-page-header>\\n\\n    <div class=\\\"row justify-content-md-center\\\">\\n        <div class=\\\"col-md-12\\\" style=\\\"text-align: center\\\">\\n                <form [formGroup]=\\\"usuarioForm\\\" (ngSubmit)=\\\"register(usuarioForm.value)\\\">\\n                    <div [ngClass]=\\\"classCss\\\" role=\\\"alert\\\" *ngIf=\\\"message\\\">\\n                        <strong>{{ message.text }}</strong>\\n                    </div>\\n                <img src=\\\"assets/images/logo.png\\\" height=\\\"40px\\\" width=\\\"40px\\\" class=\\\"user-avatar\\\" />\\n                <div class=\\\"container col-md-4\\\">\\n                    <mat-form-field>\\n                        <input  formControlName=\\\"nome\\\" matInput placeholder=\\\"Nome\\\">\\n                        <mat-error *ngIf=\\\"usuarioForm.get('nome').dirty && !usuarioForm.get('nome').valid && usuarioForm.get('nome').touched\\\">\\n                            O nome é <strong>obrigatório</strong>\\n                        </mat-error>\\n                    </mat-form-field>\\n                    <mat-form-field>\\n                        <input type=\\\"email\\\" formControlName=\\\"email\\\" matInput placeholder=\\\"Email\\\">\\n                        <mat-error *ngIf=\\\"usuarioForm.get('email').dirty && !usuarioForm.get('email').valid && usuarioForm.get('email').touched\\\">\\n                            O Email é <strong>obrigatório.</strong>\\n                        </mat-error>\\n                    </mat-form-field>\\n                    <mat-form-field>\\n                        <input type=\\\"password\\\" formControlName=\\\"senha\\\" matInput placeholder=\\\"Senha\\\">\\n                        <mat-error *ngIf=\\\"usuarioForm.get('senha').dirty && !usuarioForm.get('senha').valid && usuarioForm.get('senha').touched\\\">\\n                            A senha é <strong>obrigatória</strong>\\n                        </mat-error>\\n                    </mat-form-field>\\n                    <mat-form-field>\\n                        <mat-select formControlName=\\\"grupos\\\" placeholder=\\\"Perfil do Usuário\\\" multiple>\\n                            <mat-option *ngFor=\\\"let grupo of listaPerfil\\\" [value]=\\\"grupo\\\">{{grupo.descricao}}\\n                            </mat-option>\\n                        </mat-select>\\n                        <mat-error *ngIf=\\\"usuarioForm.get('grupos').dirty && !usuarioForm.get('grupos').valid && usuarioForm.get('grupos').touched\\\">\\n                            O perfil é <strong>obrigatório</strong>\\n                        </mat-error>\\n                    </mat-form-field>\\n                    <td colspan=\\\"2\\\" style=\\\"margin-top: 5px\\\">\\n                        <button mat-raised-button\\n                            [disabled]=\\\"usuarioForm.invalid\\\" \\n                            color=\\\"primary\\\">Cadastrar</button>\\n                    </td>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserComponent } from './user.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: UserComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class UserRoutingModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC91c2VyL3VzZXItbmV3L3VzZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ResponseApi } from '../../../shared/model/response-api';\nimport { routerTransition } from '../../../router.animations';\nimport { User } from '../../../shared/model/user.model';\nimport { SharedService } from '../../../shared/services/shared.service';\nimport { UserService } from '../../../shared/services/user.service';\nimport { Grupo } from '../../../shared/model/grupo.model';\n\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\nimport { GrupoService } from '../../../shared/services/grupo.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss'],\n  animations: [routerTransition()]\n})\nexport class UserComponent implements OnInit {\n  usuarioForm: FormGroup;\n  user = new User('', '', '', '', new Array());\n  \n  shared: SharedService;\n  message: {};\n  classCss: {};\n\n  listaPerfil: Array<Grupo> = new Array<Grupo>();\n\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService,\n    private grupoService: GrupoService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.shared = SharedService.getInstance();\n  }\n\n  ngOnInit() {\n    this.usuarioForm = this.fb.group({\n      nome: [null, Validators.required],\n      email: [null, Validators.compose([Validators.required, Validators.email])],\n      senha: [null, Validators.required],\n      grupos: [null, Validators.required]\n    });\n\n    let id: string = this.route.snapshot.params['id'];\n    if (id != undefined) {\n      this.findById(id);\n    }\n\n    this.findGrupoAll();\n  }\n\n  findById(id: string) {\n    this.userService.findById(id).subscribe((responseApi: ResponseApi) => {\n      this.user = new User(responseApi['id'], responseApi['nome'], responseApi['email'], '', responseApi['grupos']);\n      this.usuarioForm.patchValue(this.user);\n    },\n      err => {\n        this.showMessage({\n          type: 'error',\n          text: err['error']['errors'][0]\n        });\n      });\n  }\n\n  register(form: NgForm) {\n    this.message = {};\n    this.findById(form['email']);\n    this.user = new User(this.user.id !== null ? this.user.id : null, form['nome'], form['email'], form['senha'], form['grupos']);\n    this.userService.createOrUpdate(this.user).subscribe((responseApi: ResponseApi) => {\n      this.user = new User('', '', '', '', new Array());\n      let email: string = responseApi['email'];\n      this.usuarioForm.reset();\n      this.showMessage({\n        type: 'success',\n        text: `Usuário ${email} cadastrado com sucesso`\n      });\n    }, err => {\n      this.showMessage({\n        type: 'error',\n        text: err['error']['errors'][0]\n      });\n    });\n\n  }\n\n  private showMessage(message: { type: string, text: string }): void {\n    this.message = message;\n    this.buildClasses(message.type);\n    setTimeout(() => {\n      this.message = undefined;\n    }, 5000);\n  }\n\n  private buildClasses(type: string): void {\n    this.classCss = {\n      'alert': true\n    }\n\n    if (type === 'error' || type === 'erro' || type === 'errors') {\n      type = 'danger'\n    }\n\n    this.classCss['alert-' + type] = true;\n  }\n\n  getFormGroupClass(isInvalid: boolean, isDirty): {} {\n    return {\n      'form-group': true,\n      'has-error': isInvalid && isDirty,\n      'has-success': !isInvalid && isDirty\n    };\n  }\n\n  findGrupoAll() {\n    this.grupoService.findAll().subscribe((responseApi: ResponseApi) => {\n      Object.keys(responseApi).forEach(key => {\n        this.listaPerfil.push(responseApi[key]);\n      });\n    },\n      err => {\n        this.showMessage({\n          type: 'error',\n          text: err['error']['errors'][0]\n        });\n      });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { UserComponent } from './user.component';\nimport { PageHeaderModule } from '../../../shared';\n\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';  \nimport {  \n  MatButtonModule,  \n  MatMenuModule,  \n  MatToolbarModule,  \n  MatIconModule,  \n  MatCardModule,  \n  MatFormFieldModule,  \n  MatInputModule,  \n  MatDatepickerModule,  \n  MatDatepicker,  \n  MatNativeDateModule,  \n  MatRadioModule,  \n  MatSelectModule,  \n  MatOptionModule,  \n  MatSlideToggleModule,ErrorStateMatcher,ShowOnDirtyErrorStateMatcher  \n} from '@angular/material';  \nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';  \nimport { BrowserModule } from '@angular/platform-browser';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        UserRoutingModule,\n        ReactiveFormsModule, \n        PageHeaderModule,\n        MatButtonModule,\n        FormsModule,  \n        MatButtonModule,  \n        MatMenuModule,  \n        MatToolbarModule,  \n        MatIconModule,  \n        MatCardModule,  \n        MatFormFieldModule,  \n        MatInputModule,  \n        MatDatepickerModule,  \n        MatNativeDateModule,  \n        MatRadioModule,  \n        MatSelectModule,  \n        MatOptionModule,  \n        MatSlideToggleModule\n    ],\n    exports: [  \n        MatButtonModule,  \n        MatMenuModule,  \n        MatToolbarModule,  \n        MatIconModule,  \n        MatCardModule,  \n        MatFormFieldModule,  \n        MatInputModule,  \n        MatDatepickerModule,  \n        MatNativeDateModule,  \n        MatRadioModule,  \n        MatSelectModule,  \n        MatOptionModule,  \n        MatSlideToggleModule  \n      ],\n      providers: [  \n        {provide: ErrorStateMatcher, useClass: ShowOnDirtyErrorStateMatcher}  \n      ],  \n    declarations: [UserComponent]\n})\nexport class UserModule {}\n"],"sourceRoot":"webpack:///"}